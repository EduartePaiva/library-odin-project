@font-face {
    font-family: 'roboto-google';
    src: url(Roboto-Regular.ttf) format('truetype');
}

:root {
    --background: hsl(0 0% 100%);
    --foreground: hsl(240 10% 3.9%);
    --card: hsl(0 0% 100%);
    --card-foreground: hsl(240 10% 3.9%);
    --popover: hsl(0 0% 100%);
    --popover-foreground: hsl(240 10% 3.9%);
    --primary: hsl(240 5.9% 10%);
    --primary-hover: hsla(240, 6%, 10%, 0.9);
    --primary-foreground: hsl(0 0% 98%);
    --secondary: hsl(240 4.8% 95.9%);
    --secondary-hover: hsl(240, 2%, 90%);
    --secondary-foreground: hsl(240 5.9% 10%);
    --muted: hsl(240 4.8% 95.9%);
    --muted-foreground: hsl(240 3.8% 46.1%);
    --accent: hsl(240 4.8% 95.9%);
    --accent-foreground: hsl(240 5.9% 10%);
    --destructive: hsl(0 84.2% 60.2%);
    --destructive-foreground: hsl(0 0% 98%);
    --border: hsl(240 5.9% 90%);
    --input: hsl(240 5.9% 90%);
    --ring: hsl(240 5.9% 10%);
    --radius: 0.5rem;
}

li {
    list-style: none;
}

ul {
    margin: 0;
    padding: 0;
}

body {
    font-family: 'roboto-google', sans-serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background-color: var(--background);
    color: var(--foreground);
    width: 80vw;
    margin-left: auto;
    margin-right: auto;
}

.page-title {
    font-weight: 600;
    letter-spacing: 0.6rem;
    font-size: 2.5rem;
}

.btn-primary {
    color: var(--secondary);
    background-color: var(--primary);
    border: none;
    border-radius: var(--radius);
    padding: 0.5rem 1rem;
    font-size: 1rem;
    cursor: pointer;
}

.btn-secondary:focus,
.btn-primary:focus {
    outline: 2px solid var(--muted-foreground);
    outline-offset: 0.1rem;
}

.btn-secondary {
    color: var(--secondary-foreground);
    background-color: var(--secondary);
    border-radius: var(--radius);
    padding: 0.5rem 1rem;
    font-size: 1rem;
    border: none;
    cursor: pointer;
}

.btn-secondary:hover {
    background-color: var(--secondary-hover);
}

.btn-primary:hover {
    background-color: var(--primary-hover);
}

.new-book-btn {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
}


/*   Open state of the dialog  */
dialog[open] {
    opacity: 1;
    transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
    opacity: 0;
    transform: scaleY(0);
    transition:
        opacity 150ms ease-out,
        transform 150ms ease-out,
        overlay 150ms ease-out allow-discrete,
        display 150ms ease-out allow-discrete;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
    dialog[open] {
        opacity: 0;
        transform: scaleY(0);
    }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
        display 150ms allow-discrete,
        overlay 150ms allow-discrete,
        background-color 150ms;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */

@starting-style {
    dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0%);
    }
}

.dialog-style {
    border: none;
    background-color: var(--popover);
    border-radius: var(--radius);
}

.dialog-style ul {
    display: grid;
    gap: 0.5rem;
}

.dialog-style ul li label {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.4rem;
}

.dialog-style ul li label {
    font-weight: 600;
    font-size: 0.9rem;
}

.dialog-style .checkbox-label {
    justify-content: start;
    gap: 0.1rem;
}

.dialog-style .checkbox-label input {
    width: 1.2rem;
    height: 1.2rem;
}

.dialog-style form section {
    margin-bottom: 1.4rem;
}

.dialog-style .form-buttons {
    display: flex;
    justify-content: end;
    gap: 1rem;
}

/* Bookshelf part */

.books-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    margin-top: 1rem;
    gap: 1rem;
}

.book-card {
    display: flex;
    flex-direction: column;
    height: 300px;
    padding: 1rem;
    box-shadow: 0px 3px 4px 2px rgba(0, 0, 0, 0.12);
    border-radius: var(--radius);
    font-weight: 500;
    font-size: 1.1rem;
    gap: 0.1rem;

}

.book-card .title {
    align-self: center;
    text-align: center;
    font-weight: 700;
    font-size: 1.4rem;
    margin-bottom: 1rem;
}

.book-card .read {
    display: flex;
    align-items: center;
    margin-bottom: auto;
}

.book-card .read input {
    width: 1.2rem;
    height: 1.2rem;
}

.book-card .card-delete {
    align-self: end;
    width: fit-content;
}